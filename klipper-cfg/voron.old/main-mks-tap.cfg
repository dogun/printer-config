[temperature_sensor 上位机]
sensor_type: temperature_host
sensor_path: /sys/class/thermal/thermal_zone1/temp
min_temp: -50
max_temp: 100

[temperature_sensor 主板]
sensor_type: temperature_mcu
min_temp: -50
max_temp: 100

[printer]
kinematics: corexy           # 打印机类型：corexy
max_velocity: 300            # 最大速度（最大 300）
max_accel: 4000              # 最大加速度（最大 4000）
max_accel_to_decel: 4000     # 最大加速至减速（最大 4000）
max_z_velocity: 20           # Z轴最大速度
max_z_accel: 350             # Z轴最大加速度
square_corner_velocity: 5.0  # 方形拐角速度

[stepper_x]
# "STEPPER_BUZZ STEPPER=stepper_x"
step_pin: PC14                # X轴电机脉冲引脚
dir_pin:  PC13                # 方向设置
enable_pin: !PC15             # 使能引脚
#endstop_pin: ^PA14           # 限位开关接口
endstop_pin: tmc2209_stepper_x:virtual_endstop
homing_retract_dist: 0
microsteps: 64                # 细分
full_steps_per_rotation: 200  # 单圈脉冲数-对于0.9度步进设置为400
rotation_distance: 40         # 主动轮周长mm (2GT-20T为 40mm  16T为 32mm)
position_endstop: 303         # 软限位最大行程 (250mm-300mm-350mm)
position_max: 303             # 机械限位最大行程 (250mm-300mm-350mm)
homing_speed: 40              # 复位速度-最大100
[tmc2209 stepper_x]
uart_pin: PE6                 # 驱动通信端口
diag_pin: ^PA14
interpolate: False            # 微步插值256
run_current: 0.85             # 运行电流A
driver_SGTHRS: 108

[stepper_y]
step_pin: PE5                 # Y轴电机脉冲引脚
dir_pin: PE4                  # 方向设置
enable_pin: !PC15             # 使能引脚
#endstop_pin: ^PA15           # 限位开关接口
endstop_pin: tmc2209_stepper_y:virtual_endstop
homing_retract_dist: 0
microsteps: 64                # 细分
full_steps_per_rotation:200   # 单圈脉冲数-对于0.9度步进设置为400
rotation_distance: 40         # 主动轮周长mm （2GT-20T为 40mm  16T为 32mm）
position_endstop: 311         # 软限位最大行程 (250mm-300mm-350mm)
position_max: 311             # 机械限位最大行程 (250mm-300mm-350mm)
homing_speed: 40              # 复位速度-最大100
[tmc2209 stepper_y]
uart_pin: PE3                 # 驱动通信端口
diag_pin: ^PA15
interpolate: False            # 微步插值256
run_current: 0.85             # 运行电流A
driver_SGTHRS: 117

## Z0 步进电机 - 左前 
[stepper_z]
# "Z_ENDSTOP_CALIBRATE"
step_pin: PE1                 # Z电机脉冲引脚
dir_pin: !PE0                 # 方向设置
enable_pin: !PE2              # 使能引脚
#endstop_pin: PB13             # 限位开关接口
endstop_pin: probe:z_virtual_endstop
microsteps: 64                # 细分
full_steps_per_rotation:400   # 单圈脉冲数-对于0.9度步进设置为400
rotation_distance: 40         # 主动轮周长mm （2GT-20T为 40mm  16T为 32mm）
gear_ratio: 80:16             # 减速比
position_min: -8              # 软限位最小行程（配置喷嘴清洁需要-5左右）
position_max: 290             # 软限位最大行程 (240mm-290mm-340mm)
homing_speed: 10              # 复位速度-最大20
[tmc2209 stepper_z]
uart_pin: PB7                 # 驱动通信端口
interpolate: False            # 微步插值256
run_current: 0.7              # 运行电流A

##	Z1 步进电机 - 左后
[stepper_z1]
step_pin: PD6                 # Z1电机脉冲引脚
dir_pin: PD5                  # 方向设置
enable_pin: !PD7              # 使能引脚
full_steps_per_rotation:400
microsteps: 64                # 细分
rotation_distance: 40         # 主动轮周长mm （2GT-20T为 40mm  16T为 32mm）
gear_ratio: 80:16             # 减速比
[tmc2209 stepper_z1]
uart_pin: PD4                 # 驱动通信端口
interpolate: False            # 微步插值256
run_current: 0.7              # 运行电流A

##	Z2 步进电机 - 右后 
[stepper_z2]
step_pin: PD2                 # Z2电机脉冲引脚
dir_pin: !PD1                 # 方向设置
enable_pin: !PD3              # 使能引脚
full_steps_per_rotation:400
microsteps: 64                # 细分
rotation_distance: 40         # 主动轮周长mm （2GT-20T为 40mm  16T为 32mm）
gear_ratio: 80:16             # 减速比
[tmc2209 stepper_z2]
uart_pin: PD0                 # 驱动通信端口
interpolate: False            # 微步插值256
run_current: 0.7              # 运行电流A

##	Z3 步进电机 - 右前 
[stepper_z3]
step_pin: PC7                 # Z3电机脉冲引脚
dir_pin: PC6                  # 方向设置
enable_pin: !PC8              # 使能引脚
full_steps_per_rotation:400
microsteps: 64                # 细分
rotation_distance: 40         # 主动轮周长mm （2GT-20T为 40mm  16T为 32mm）
gear_ratio: 80:16             # 减速比
[tmc2209 stepper_z3]
uart_pin: PD15                # 驱动通信端口
interpolate: False            # 微步插值256
run_current: 0.7              # 运行电流A

[extruder]
# "PID_CALIBRATE HEATER=extruder TARGET=245"
step_pin: PB5                 # E0电机脉冲引脚
dir_pin: !PB4                 # 方向设置
enable_pin: !PB6              # 使能引脚
microsteps: 64                # 细分
full_steps_per_rotation: 400  # 单圈脉冲数 （200 为 1.8 度, 400 为 0.9 度）
gear_ratio: 50:16             # 传动比
nozzle_diameter: 0.400        # 喷嘴直径
filament_diameter: 1.75       # 耗材直径
heater_pin:  PB1              # 加热棒引脚
sensor_type: NTC 100K MGB18-104F39050L32
sensor_pin: PC0               # 传感器接口
#smooth_time: 0.5
min_temp: -50                 # 最小温度
max_temp: 330                 # 最大温度
min_extrude_temp: 190         # 最小挤出温度
#新值=旧值*(实际值/目标值100)
rotation_distance: 22.7       # 近程步进值
#rotation_distance: 27.717481  # M4远程
pressure_advance_smooth_time: 0.040
pressure_advance: 0.035       # 推进压力-尽量将压力保持在1.0以下  -- 近程时
#pressure_advance: 0.8         # 推进压力-尽量将压力保持在1.0以下 -- 远程时

[tmc2209 extruder]
uart_pin: PB3                 # 驱动通信端口
interpolate: False            # 微步插值256
run_current: 0.35             # 运行电流A

[verify_heater extruder]      # 加热块温度容差配置
max_error: 120                # 最大误差
check_gain_time:120           # 容差时间
hysteresis: 50                # 容差温度
heating_gain: 2               # 加热增益

[firmware_retraction]
retract_length: 0.75
retract_speed: 40
unretract_extra_length: 0
unretract_speed: 35

[heater_bed]
# "PID_CALIBRATE HEATER=heater_bed TARGET=100"
heater_pin: PB10             # 热床接口
sensor_type: Generic 3950    # 热床传感器类型
sensor_pin: PC1              # 热床传感器接口
smooth_time: 0.5
min_temp: 0                  # 最小温度（注意：测量温度超过设定值会触发紧急停止）
max_temp: 120                # 最大温度（注意：测量温度超过设定值会触发紧急停止）

[verify_heater heater_bed]      # 加热块温度容差配置
max_error: 120                # 最大误差
check_gain_time:120           # 容差时间
hysteresis: 15                # 容差温度
heating_gain: 2               # 加热增益

[fan]
pin: PA1

[heater_fan 喉管散热风扇]
pin: PA0                     #喉管散热风扇引脚设置
heater: extruder
heater_temp: 50.0            #喉管散热风扇启动阀值
shutdown_speed: 1

[heater_fan 仓外排气]
pin: PA2                     #喉管散热风扇引脚设置
heater: extruder
heater_temp: 50.0            #喉管散热风扇启动阀值
fan_speed: 0.05
shutdown_speed: 1

#[output_pin 仓外排气 ]
#pin: PA2
#pwm: True
#value: 0
#cycle_time: 0.01

[temperature_sensor 仓温]
sensor_type: Generic 3950
sensor_pin: PC2

#[heater_fan 电路仓风扇]
#pin: PA0
#heater: extruder
#heater_temp: 10.0
#fan_speed: 0.8
#shutdown_speed: 1.0

#[temperature_fan 仓外排气+仓温 Fan]
#pin: PA2
#shutdown_speed: 1
#sensor_type: Generic 3950
#sensor_pin: PC2
#min_temp: -70
#max_temp: 75
#target_temp: 45
#control: watermark

#[filament_switch_sensor 断料检测]
#QUERY_FILAMENT_SENSOR SENSOR=断料检测
#pause_on_runout: True         #耗材检测的打开或者闭合状态默认闭合True
#runout_gcode: ZT              #在检测到没有耗材运行的G代码 默认为暂停pause
#insert_gcode:                 #检测到插入耗材运行的G代码 默认为不运行
#event_delay: 3.0              #事件之间的最小延迟时间（秒）默认3秒
#pause_delay: 0.5              #暂停命令之间的延迟时间（以秒为单位默认0.5
#switch_pin: PA15              #连接开关的针脚

[gcode_macro _idle_Variables]
variable_ready: False
gcode:

[idle_timeout]
timeout: 1800
gcode:
  M84
  SET_GCODE_VARIABLE MACRO=_idle_Variables VARIABLE=ready VALUE={ False }
  { action_respond_info("Idle timeout...") }

[gcode_shell_command notify_start]
command: /home/dogun/shell/klipper_notify.sh start
timeout: 2
verbose: True

[gcode_shell_command notify_finish]
command: /home/dogun/shell/klipper_notify.sh finish
timeout: 2
verbose: True

[gcode_shell_command notify_pause]
command: /home/dogun/shell/klipper_notify.sh pause
timeout: 2
verbose: True

[gcode_shell_command remote_run]
command: /home/dogun/shell/remote_run.sh
timeout: 20
verbose: True

[gcode_macro call_forklift]
gcode:
  {% set _name = printer["gcode_macro _name_Variables"].name %}
  RUN_SHELL_COMMAND CMD=remote_run PARAMS="{_name} call_forklift NONE"

[filament_motion_sensor 断堵料检测]
detection_length: 100
extruder: extruder
switch_pin: PA13
pause_on_runout: True
runout_gcode: 
    M117 filament_motion_sensor error
    { action_respond_info("filament_motion_sensor error") }
    {% if printer.print_stats.filename %}
      {% set fname = printer.print_stats.filename %}
    {% endif %}
    {% set _name = printer["gcode_macro _name_Variables"].name %}
    RUN_SHELL_COMMAND CMD=notify_pause PARAMS="{_name} {fname}"

[probe]
# "PROBE_CALIBRATE"
pin: ^PB12                   # 信号接口
x_offset: 0
y_offset: 0
speed: 10
samples:3 
#samples_result: median
sample_retract_dist: 4.0
samples_tolerance: 0.01
samples_tolerance_retries: 3

[gcode_macro _Variables]
variable_target_temp: 220
variable_probe_temp: 160
gcode:

[gcode_macro PROBE_START]
gcode:
    {% set PROBE_TEMP = printer["gcode_macro _Variables"].probe_temp %}
    {% set MAX_TEMP = PROBE_TEMP + 5 %}
    {% set ACTUAL_TEMP = printer.extruder.temperature %}
    {% set TARGET_TEMP = printer.extruder.target %}
    SET_GCODE_VARIABLE MACRO=_Variables VARIABLE=target_temp VALUE={ TARGET_TEMP }
    {% if TARGET_TEMP > PROBE_TEMP %}
        { action_respond_info('Extruder temperature target of %.1fC is too high, lowering to %.1fC' % (TARGET_TEMP, PROBE_TEMP)) }
        M109 S{ PROBE_TEMP }
    {% else %}
        # Temperature target is already low enough, but nozzle may still be too hot.
        {% if ACTUAL_TEMP > MAX_TEMP %}
            { action_respond_info('Extruder temperature %.1fC is still too high, waiting until below %.1fC' % (ACTUAL_TEMP, MAX_TEMP)) }
            TEMPERATURE_WAIT SENSOR=extruder MAXIMUM={ MAX_TEMP }
        {% endif %}
    {% endif %}
    
[gcode_macro PROBE_END]
gcode:
    {% set TARGET_TEMP = printer["gcode_macro _Variables"].target_temp %}
    M109 S{ TARGET_TEMP }

[bed_mesh]
speed: 60                     # 校准速度
horizontal_move_z: 10
mesh_min: 30, 30              # 最小校准点坐标x，y
mesh_max: 270, 270            # 最大校准点坐标x，y
probe_count: 5, 5             # 采样点数（4X4为16点）

[quad_gantry_level]
gantry_corners:              # 300mm机器调平点位
	-60,-10
	360,370
points:
	50,25
	50,225
	250,225
	250,25
speed: 100                   # 调平速度
horizontal_move_z: 20        # Z轴起始高度
retry_tolerance: 0.01        # 采样公差
retries: 5                   # 超公差重试次数
max_adjust: 10               # 调平最大调整行程

[gcode_macro T0]
gcode:

[homing_override]
axes: xyz
set_position_z:0
gcode:
    {% set _min_t = printer.configfile.settings.extruder.min_extrude_temp %}
    { action_respond_info("ho min temp: %s" % (_min_t)) }
    {% set temp = printer.extruder.temperature %}
    {% if temp > _min_t %}
      G92 E0
      G1 E-2 F2400
    {% endif %}
    G91
    G0 Z10 F1500
#x
    G90
    G4 P2000
    G28 X
    G91
    G1 X-10 F5000
#y
    G90
    G4 P2000
    G28 Y
    G91
    G1 Y-10 F5000
#z
    G90
    G0 X150 Y150 F4800
    G28 Z
    G0 Z20 F1500

[gcode_macro CLEAN_NOZZLE]
gcode:
    {% set _z = printer["gcode_macro _cn_Variables"].z %}
    { action_respond_info("cn z: %s" % (_z)) }
    {% set _min_t = printer.configfile.settings.extruder.min_extrude_temp %}
    { action_respond_info("cn min temp: %s" % (_min_t)) }
    G90
    G0 X250 Y309.5 Z25 F6000
    G0 Z{_z} F500
    {% set temp = printer.extruder.temperature %}
    {% if temp < _min_t %}
      { action_respond_info("temperature error, skip e") }
    {% endif %}
    {% if temp > _min_t %}
      G92 E0
      G1 E5 F300
    {% endif %}
    G4 P4000
    G0 X190 F4000
    G0 X250 F4000
    G0 X190 F10000
    G0 X250 F10000
    G0 X190 F15000
    G0 X250 F15000
    G0 X199 F10000
    G0 X250 F10000
    G0 X190 F4000
    G0 X250 F4000
    {% if temp > _min_t %}
      G92 E0
      G1 E-2 F2400
    {% endif %}
    G0 X190 Y270 Z25 F6000

[gcode_macro G32]
gcode:
    PROBE_START
    BED_MESH_CLEAR                 # 卸载网床
    G28                            # 归位所有轴
    CLEAN_NOZZLE
    G28
    QUAD_GANTRY_LEVEL              # 龙门架调平
    G28
    PROBE_END
    CLEAN_NOZZLE

[gcode_macro SET_READY]
gcode:
    SET_GCODE_VARIABLE MACRO=_idle_Variables VARIABLE=ready VALUE={ True }
    { action_respond_info("Set ready...") }

[gcode_macro PRINT_START]          # 将 PRINT_START 设置为开始打印时的宏，自定义打印前的动作
gcode:
  {% set _READY = printer["gcode_macro _idle_Variables"].ready %}
  {% if _READY %}
    { action_respond_info("Ready...") }
  {% else %}
    G32                            # 归位所有轴
  {% endif %}
  G92 E0
  G1 E2.5 F300
  G92 E0
  BED_MESH_PROFILE LOAD=default  # 加载网床
  {% if printer.print_stats.filename %}
    {% set fname = printer.print_stats.filename %}
  {% endif %}
  {% set _name = printer["gcode_macro _name_Variables"].name %}
  RUN_SHELL_COMMAND CMD=notify_start PARAMS="{_name} {fname}"
  SET_READY

[gcode_macro PRINT_END]            # 将 PRINT_END 设置为打印结束时的宏，自定义打印完成之后动作
gcode:
    M400                           # 等待缓冲区清除
    G92 E0                         # 将挤出机归零
    G1 E-5 F2400                   # 缩回耗材丝
    TURN_OFF_HEATERS               # 关闭热端
    M107                           # 关闭风扇
    G91                            # 相对定位
    G1 Z2 F1000                    # 将喷嘴向上移动2毫米
    G90                            # 绝对定位
    G0 X280 Y280 F6000             # 将喷嘴停在后部
    BED_MESH_CLEAR                 # 卸载网床
    {% if printer.print_stats.filename %}
      {% set fname = printer.print_stats.filename %}
    {% endif %}
    {% set _name = printer["gcode_macro _name_Variables"].name %}
    RUN_SHELL_COMMAND CMD=notify_finish PARAMS="{_name} {fname}"
